def count_changes(board, start_row, start_col, pattern):
    count = 0
    for i in range(8):
        for j in range(8):
            if board[start_row + i][start_col + j] != pattern[i][j]:
                count += 1
    return count

# 입력 받기
N, M = map(int, input().split())
board = [input().strip() for _ in range(N)]

# 체스판 패턴 정의
white_pattern = [
    "WBWBWBWB",
    "BWBWBWBW",
    "WBWBWBWB",
    "BWBWBWBW",
    "WBWBWBWB",
    "BWBWBWBW",
    "WBWBWBWB",
    "BWBWBWBW"
]

black_pattern = [
    "BWBWBWBW",
    "WBWBWBWB",
    "BWBWBWBW",
    "WBWBWBWB",
    "BWBWBWBW",
    "WBWBWBWB",
    "BWBWBWBW",
    "WBWBWBWB"
]

min_changes = float('inf')

# 모든 가능한 8x8 영역 확인
for i in range(N - 7):
    for j in range(M - 7):
        # 흰색으로 시작하는 패턴과 비교
        white_changes = count_changes(board, i, j, white_pattern)
        # 검은색으로 시작하는 패턴과 비교
        black_changes = count_changes(board, i, j, black_pattern)
        
        # 최소값 업데이트
        min_changes = min(min_changes, white_changes, black_changes)

print(min_changes)
